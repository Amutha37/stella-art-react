{"version":3,"sources":["components/pages/floral/Florals.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/carousel/ThumbNailImages.js","components/carousel/Buttons.js","components/carousel/WholeImageView.js","components/pages/SlideControler.js"],"names":["Florals","PrintMessage","MessageForSale","PrintQuotes","QuotesFlorals","slideImages","FloralImages","blueThumb","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","ThumbNailImages","slides","currentSlide","status","className","map","item","i","src","image","alt","name","id","onClick","Buttons","plusSlides","value","Fullimageview","slideIndex","PrintBlueThumb","index","style","display","size","SlideControler","imgarrlength","length","useState","imageIndex","setImageIndex","fill","idx","setStatus","statusUpdate","n","copy","WholeImageView","event","ind","Number","target","newind","e","num"],"mappings":"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","file":"static/js/4.0128e9e0.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport { MessageForSale, QuotesFlorals } from \"../../fetchContent/FetchMessage\";\nimport { FloralImages, blueThumb } from \"../../../components/Images/Images\";\nimport SlideControler from \"../SlideControler\";\n// import Footer from \"../../Footer/Footer\";\n\nconst Florals = () => {\n  const PrintMessage = MessageForSale();\n  const PrintQuotes = QuotesFlorals();\n\n  return (\n    <Fragment>\n      <SlideControler\n        slideImages={FloralImages}\n        PrintMessage={PrintMessage}\n        PrintQuotes={PrintQuotes}\n        blueThumb={blueThumb}\n      />\n\n      {/* <Footer /> */}\n    </Fragment>\n  );\n};\n\nexport default Florals;\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react'\n\nfunction ThumbNailImages({ slides, currentSlide, status, PrintQuotes }) {\n  return (\n    <>\n      {/* //  <!-- Thumbnail images --> */}\n      <div className='row'>\n        {slides.map((item, i) => (\n          <div key={i} className='column'>\n            <img\n              className={`cursor ${status[i] ? 'current' : 'demo'}`}\n              src={item.image}\n              alt={item.name}\n              id={item.id}\n              onClick={currentSlide}\n            />\n          </div>\n        ))}\n      </div>\n      {PrintQuotes}\n    </>\n  )\n}\n\nexport default ThumbNailImages\n","import React from \"react\";\n\n// Next and previous buttons\nfunction Buttons({ plusSlides }) {\n  return (\n    <>\n      <button className=\"prev\" value=\"-1\" onClick={plusSlides}>\n        ◀︎\n      </button>\n      <button className=\"next\" value=\"1\" onClick={plusSlides}>\n        ►\n      </button>\n    </>\n  );\n}\n\nexport default Buttons;\n","import React from \"react\";\nimport Buttons from \"./Buttons\";\n\nconst Fullimageview = ({\n  status,\n  slides,\n  slideIndex,\n  plusSlides,\n  PrintMessage,\n  PrintBlueThumb,\n}) => {\n  return (\n    <>\n      {slides.map((item, index) => (\n        <div\n          className=\"mySlides\"\n          style={status[index] ? { display: \"block\" } : { display: \"none\" }}\n          key={index}\n        >\n          {<img src={item.image} alt={item.name} />}\n          {/* {index === slides.length - 1 ? null : (\n            <img src={item.image} alt={item.name} />\n          )} */}\n\n          {/* contact note */}\n          {/* {PrintMessage && slideIndex === slides.length && (\n            <div className='contactnote'>{PrintMessage}</div>\n          )} */}\n        </div>\n      ))}\n\n      <Buttons plusSlides={plusSlides} />\n      {/* <div className='caption-container'> */}\n      <div id=\"caption\">\n        <div id=\"caption_left\">{PrintBlueThumb}</div>\n        <div id=\"caption_right\">\n          <p>{slides[slideIndex - 1].name} </p>{\" \"}\n          <p className=\"imagesize\">{slides[slideIndex - 1].size}</p>\n        </div>\n      </div>\n\n      {/* <img src={item.image} alt={item.name} /> */}\n      {/* </div> */}\n    </>\n  );\n};\n\nexport default Fullimageview;\n","import React, { useState } from \"react\";\nimport ThumbNailImages from \"../carousel/ThumbNailImages\";\nimport WholeImageView from \"../carousel/WholeImageView\";\nimport \"../carousel/carousel.css\";\n\nconst SlideControler = ({\n  slideImages,\n  PrintMessage,\n  PrintQuotes,\n  blueThumb,\n}) => {\n  const imgarrlength = slideImages.length;\n\n  const [imageIndex, setImageIndex] = useState(1);\n  const [status, setStatus] = useState(\n    new Array(imgarrlength).fill().map((item, idx) => idx === 0)\n  );\n\n  // Next/previous controls\n  function plusSlides(event) {\n    let ind = Number(event.target.value);\n    let newind = imageIndex + ind;\n    let nex;\n\n    if (newind < 1) {\n      nex = imgarrlength;\n    } else if (newind > imgarrlength) {\n      nex = 1;\n    } else {\n      nex = newind;\n    }\n    statusUpdate(nex);\n  }\n\n  // Thumbnail image controls\n  const currentSlide = (e) => {\n    const num = Number(e.target.id);\n    statusUpdate(num);\n  };\n\n  // boolean status update\n  const statusUpdate = (n) => {\n    const copy = [...status];\n    copy.fill(false);\n\n    copy[n - 1] = !copy[n - 1];\n    setStatus(copy);\n    setImageIndex(n);\n  };\n\n  return (\n    //  <!-- Container for the image gallery -->\n    <div className=\"natureContainer\">\n      <div className=\"containernature\">\n        <WholeImageView\n          slideIndex={imageIndex}\n          slides={slideImages}\n          status={status}\n          plusSlides={plusSlides}\n          PrintMessage={PrintMessage}\n          PrintBlueThumb={blueThumb}\n        />\n\n        <ThumbNailImages\n          slides={slideImages}\n          currentSlide={currentSlide}\n          status={status}\n          slideIndex={imageIndex}\n          PrintQuotes={PrintQuotes}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SlideControler;\n"],"sourceRoot":""}